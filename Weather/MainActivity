package com.example.caucse.myapplication;

import android.Manifest;
import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.AsyncTask;
import android.os.Build;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import org.json.JSONArray;
import org.json.JSONObject;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class MainActivity extends AppCompatActivity {
    private final double ABSOLUTE_ZERO = 273.15;
    private LocationManager locationManager;
    private TextView lng;
    private TextView lat;
    private TextView weather;
    private Button set;
    private MainActivity activity;
    private TextView min;
    private TextView max;
    JSONObject data = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        activity = this;
        lng = (TextView) findViewById(R.id.lng);
        lat = (TextView) findViewById(R.id.lat);
        weather = (TextView)findViewById(R.id.weather);
        set = (Button)findViewById(R.id.setWeather);
        min = (TextView)findViewById(R.id.min);
        max = (TextView)findViewById(R.id.max);
        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);

        set.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                weather.setText(getJSON(lat.getText().toString(),lng.getText().toString()));
            }
        });

        chkGpsService();
        if(Build.VERSION.SDK_INT >= 23) {
            if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 1);
                if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {

                }
            }
        }
        locationManager.requestLocationUpdates(locationManager.NETWORK_PROVIDER, 1000, 1000, locationListener);
        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1000, 1000, locationListener);
    }


    private LocationListener locationListener = new LocationListener() {
        @Override
        public void onLocationChanged(Location location) {
            lat.setText(String.valueOf(location.getLatitude()));
            lng.setText(String.valueOf(location.getLongitude()));
        }

        @Override
        public void onStatusChanged(String s, int i, Bundle bundle) {

        }

        @Override
        public void onProviderEnabled(String s) {

        }

        @Override
        public void onProviderDisabled(String s) {

        }
    };
    private boolean chkGpsService() {

        String gps = android.provider.Settings.Secure.getString(getContentResolver(), android.provider.Settings.Secure.LOCATION_PROVIDERS_ALLOWED);

        Log.d(gps, "aaaa");

        if (!(gps.matches(".*gps.*") && gps.matches(".*network.*"))) {

            // GPS OFF 일때 Dialog 표시
            AlertDialog.Builder gsDialog = new AlertDialog.Builder(this);
            gsDialog.setTitle("위치 서비스 설정");
            gsDialog.setMessage("GPS 위성 사용을 모두 체크하셔야 정확한 위치 서비스가 가능합니다.\n위치 서비스 기능을 설정하시겠습니까?");
            gsDialog.setPositiveButton("OK", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int which) {
                    // GPS설정 화면으로 이동
                    Intent intent = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
                    intent.addCategory(Intent.CATEGORY_DEFAULT);
                    startActivity(intent);
                }
            })
                    .setNegativeButton("NO", new DialogInterface.OnClickListener() {
                        public void onClick(DialogInterface dialog, int which) {
                            return;
                        }
                    }).create().show();
            return false;

        } else {
            return true;
        }
    }

    public String getJSON(final String lat2, final String lng2){

        String nowWeather = "";
        new AsyncTask<Object, Object, String>() {


            @Override
            protected void onPreExecute() {
                super.onPreExecute();

            }

            @Override
            protected String doInBackground(Object... params) {
                try {
                    URL url = new URL("http://api.openweathermap.org/data/2.5/weather?lat="
                            +lat2+"&lon="+lng2+"&APPID=b8d06925570e44ddd1e5620c22aee88d");

                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();

                    BufferedReader reader =
                            new BufferedReader(new InputStreamReader(connection.getInputStream()));

                    StringBuffer json = new StringBuffer(1024);
                    String tmp = "";

                    while((tmp = reader.readLine()) != null)
                        json.append(tmp).append("\n");
                    reader.close();

                    data = new JSONObject(json.toString());

                    //weather 로 parsing
                    JSONArray weatherDataArray = (JSONArray) data.get("weather");

                    //weather 로 paring 한것을 JSON 객체로 재졍렬
                    JSONObject object1 = (JSONObject) weatherDataArray.get(0);

                    JSONObject object2 = (JSONObject) data.get("main");

                    Log.d("mina is " , object2.toString());
                    final String minS = String.valueOf(object2.getDouble("temp_min")-ABSOLUTE_ZERO);
                    final String maxS = String.valueOf(object2.getDouble("temp_max")-ABSOLUTE_ZERO);
                   // final String minTemp = String.valueOf(Double.parseDouble((String) object2.get("tmp_min")) - ABSOLUTE_ZERO);

                    final String nowWeather = (String) object1.get("main");
                    Log.d("weather is ", nowWeather);
                    activity.runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            weather.setText(nowWeather);
                            min.setText(minS);
                            max.setText(maxS);
                        }
                    });

                    return nowWeather;

                } catch (Exception e) {

                    System.out.println("Exception "+ e.getMessage());
                    return null;
                }

            }

            @Override
            protected void onPostExecute(String Void) {
                if(data!=null){
                    Log.d("my weather received",data.toString());
                }

            }
        }.execute();

        return nowWeather;
    }
}
